apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion appCompileSdkVersion
    buildToolsVersion appBuildToolsVersion

    signingConfigs {
        releaseConfig {
            try {
                keyAlias 'keydata.keystore'
                keyPassword KEY_PASSWORD
                storeFile file('../misc/keydata.keystore')
                storePassword STORE_PASSWORD
            } catch (ex) {
                throw new InvalidUserDataException("You should define KEY_PASSWORD and STORE_PASSWORD in gradle.properties.")
            }
        }
    }

    defaultConfig {
        applicationId "com.rc.grocery"
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
//        versionCode appVersionCode
//        versionName appVersionName

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        // define your base Applications name here
        resValue 'string', 'app_name', 'Grocery'
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false

            //For single file
//            proguardFile 'aboutbox.pro'
            //For all files
//            proguardFiles fileTree(dir: "rules", include: ["*.pro"]).asList().toArray()

            //Default proguard call
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    //Flavor definition
    flavorDimensions "customer"
    productFlavors {
        iExpress {
            dimension "customer"

            applicationIdSuffix ".iexpress"
            versionCode iExpressVersionCode
            versionName iExpressVersionName
        }
    }

    //Format output
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            println variant

            //Rename the output apk file
            def underScore = "_"
            def flavor = variant.baseName.split("-")[0]
            def version = variant.versionName
            def buildType = variant.buildType.name
            def appName = flavor
            def releaseApkName = appName + underScore + version + underScore + convertToCamelCase(buildType) + ".apk"
            outputFileName = releaseApkName

            // set new resVale
            variant.resValue 'string', 'app_name', appName
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

def static String convertToCamelCase(String str) {
    if (str == null) {
        return null
    }

    boolean space = true
    StringBuilder builder = new StringBuilder(str)
    final int len = builder.length()

    for (int i = 0; i < len; ++i) {
        char c = builder.charAt(i)
        if (space) {
            if (!Character.isWhitespace(c)) {
                // Convert to title case and switch out of whitespace mode.
                builder.setCharAt(i, Character.toTitleCase(c))
                space = false
            }
        } else if (Character.isWhitespace(c)) {
            space = true
        } else {
            builder.setCharAt(i, Character.toLowerCase(c))
        }
    }

    return builder.toString()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'

    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'
//    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.nineoldandroids:library:2.4.0'
    // implementation 'com.daimajia.slider:library:1.1.5@aar'
    // implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.google.firebase:firebase-messaging:17.4.0'
    implementation "com.daimajia.swipelayout:library:1.2.0@aar"
//    testCompile 'junit:junit:4.12'
    // Glide image loader
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation "com.android.support:multidex:$multiDexVersion"
    // Stripe
    implementation "com.stripe:stripe-android:$stripeAndroidVersion"
    implementation "com.stripe:stripe-java:$stripeJavaVersion"
    // Barcode
    implementation "com.journeyapps:zxing-android-embedded:$zxingVersion"
    // Switch icon
    implementation 'com.github.zagum:Android-SwitchIcon:1.3.8'
    // Pdf viewer
    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'
    // Parceler
    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'

    implementation project(":easyrecyclerview")
    implementation project(":androidimageslider")
}